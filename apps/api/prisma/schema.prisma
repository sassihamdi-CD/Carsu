generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tenant {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  users     UserTenant[]
  boards    Board[]
  todos     Todo[]
}

model User {
  id           String        @id @default(cuid())
  email        String        @unique
  passwordHash String
  createdAt    DateTime      @default(now())
  memberships  UserTenant[]
  todos        Todo[]        @relation("TodoAssignee")
}

model UserTenant {
  userId   String
  tenantId String
  role     String   @default("member")

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  tenant Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@id([userId, tenantId])
  @@index([tenantId])
}

model Board {
  id        String   @id @default(cuid())
  tenantId  String
  name      String
  createdAt DateTime @default(now())
  tenant    Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  todos     Todo[]

  @@index([tenantId])
}

model Todo {
  id             String   @id @default(cuid())
  tenantId       String
  boardId        String
  title          String
  description    String   @default("")
  status         TodoStatus @default(TODO)
  assigneeUserId String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  tenant   Tenant @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  board    Board  @relation(fields: [boardId], references: [id], onDelete: Cascade)
  assignee User?  @relation("TodoAssignee", fields: [assigneeUserId], references: [id])

  @@index([tenantId])
  @@index([tenantId, boardId])
}

enum TodoStatus {
  TODO
  IN_PROGRESS
  DONE
}
